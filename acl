@Library('jenkinslib') _     

def mytools = new org.devops.add()
def tools = new org.devops.tools()
def demail = new org.devops.moemail()
def mmail = new  org.devops.toemail()
def daqiacl = new org.devops.useracl()
pipeline {
    agent any
     parameters {
        
        
    gitParameter branchFilter: 'origin/(.*)', defaultValue: 'master', name: 'BRANCH', type: 'PT_BRANCH', useRepository: 'ssh://git@git.moseeker.com:33897/mochannel/docking.git'
    choice(
            
                    choices: 'sandbox\nproduction',
                    description: '上线环境',
                    name: 'target_env')
  }
    
    
   
    options { timeout(time: 50, unit: 'MINUTES') }
    
    
    
    
    
    
    stages {
        stage('Checkout coding') {
            steps {
                 wrap([$class: 'BuildUser']) {
                script {
                    
                    user = "${BUILD_USER_ID}"
                     
                        // 这里赋值给全局变量 后续的stage中也可以使用到。
                       println(user)

                }
                
                
                 git branch: "${params.BRANCH}", url: 'ssh://git@git.moseeker.com:33897/mochannel/docking.git'
             }
            }
        } 

        
               
        stage('审批') {
               when {
                expression { user ==~ /(hupan|staging)/ }
               }
         //input {
              // message "Should we continue?"
              // ok "Yes, we should."
             //  submitter "alice,bob,admin,hupan"
              //  parameters {
                 //   string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
              //  }
           //}
            steps {
                echo "Hello,  nice to meet you."
                
                script {
                    userEmail = "hupan@moseeker.com"
                    mytools.addva(9,10)
                    demail.daqimail("${params.BRANCH}","${env.target_env}")
                    mmail.smail("suess","hupan@moseeker.com")
                    
                    tools.PrintMes("test","red")
                   // daqiacl.acl()
                    def remote = [:]
                    remote.name = 'prepub'
                    remote.host = '123.56.135.88'
                    remote.user = 'root'
                    remote.port = 33897
                    remote.identityFile = '/home/jenkins/.ssh/id_rsa'
                    remote.allowAnyHosts = true
                    
                      sshCommand remote: remote, command: "ls -lrt"
                      sshCommand remote: remote, command: '''
                       ip addr
                       
                      '''
                      
                    
                    
                    
                    
                    
                    
                    
                }
            }
        }
        
        
        
        
        
        
        
        
        
        

        stage ('test') {
            
            steps {
                
                parallel (
                    "unit tests": { sh 'date' },
                    "integration tests": { sh 'date' }
                )
                
                
                
            }
        }

       

        

        
    }
//    post {
 //       always {
//            mail to: 'kongfanfu@moseeker.com', cc: 'hupan@moseeker.com',from: 'ee@qq.com', subject: 'Pipeline failed', body: "${env.JOB_NAME} 已发预发布"
//        }
 //   }
}
